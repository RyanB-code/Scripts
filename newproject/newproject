#!/bin/bash

# Variables
projName=$1
projDirectory="/mnt/NAS/1. Project Related/Project Source Directories"

scriptDirectory="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
relativeTemplatesDirectoryName="newproject-files"
tasksTemplate="tasks-linux.txt"


# If no argument exists, exit
if [ "$#" -eq 0 ]
then
  echo "No arguments provided"
  exit 2
fi

# Override the default directory
if [ "$#" -eq 2 ]
then
  projDirectory=$2
fi

echo "Directory is set to \"$projDirectory\""
projName=$(echo "$projName" | tr " " "-")

# Confirm project name
read -p "Confirm name as \"$projName\" [y/N]: " input
case $input in
    [yY]*)
        # Continue execution
        ;;
    *)
        echo "Aborted project creation"
        exit 2
        ;;
esac

# Ensure project directory exists
if [ -d "$projDirectory" ]
then
    # Create project directory in specified path
    projPath=${projDirectory}/${projName}
    mkdir "$projPath"
else
    echo "Project directory \"$projDirectory\" does not exist."
    exit 2
fi

# Create subdirectories
mkdir "$projPath/include"
mkdir "$projPath/bin"
mkdir "$projPath/lib"
mkdir "$projPath/docs"
mkdir "$projPath/src"
mkdir "$projPath/builds"
mkdir "$projPath/.vscode"

# Copy temaplated tasks.json to exist

# Change to parent of script directory to search for template files
cd ${scriptDirectory}

# Test template for tasks.json to exist, then copy template to create tasks.json
if [ -f "$relativeTemplatesDirectoryName/$tasksTemplate" ]
then

    # Copy tempalte file for tasks.json into correct folder
    cp "$relativeTemplatesDirectoryName/$tasksTemplate" "$projPath/.vscode/tasks.json"
else
    echo "No template for tasks.json was found so it was not created."
fi

echo "Project can be found at \"$projPath\""
echo "Opening in VS Code..."

# Open in VS Code
code "$projPath"
