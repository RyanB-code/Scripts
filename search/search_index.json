{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"General Scripts Overview","text":""},{"location":"#the-purpose","title":"The Purpose","text":"<p>This is a page dedicated to all scripts that I created for my own personal use. There is no guarantee everything will be accurate and explain in full depth to someone who is not familiar with these projects/scripts. </p> <p>The intent is for me to be able to refer back to these pages when necessary, without having to look at the source code every time. This requires me to update the documentation with every push, and that is something I need to get better at currently.</p>"},{"location":"#file-locations","title":"File Locations","text":"<p>General file locations for these scripts will be in the <code>/usr/local/bin</code> directory, with necessary helper files located in either the same directory, or under <code>/usr/local/share/&lt;Project Name&gt;</code> for files that need to be stored.</p> <p>Additional information can be found with the script.</p>"},{"location":"#example","title":"Example","text":"<p>A project with the name \"Time Tracker\" or \"Time-Tracker\" would have helper files under <code>/usr/local/share/Time-Tracker</code> or <code>/usr/local/bin/Time-Tracker-Files</code> </p>"},{"location":"#general-setup","title":"General Setup","text":""},{"location":"#script-only","title":"Script only","text":"<ol> <li>Copy script file into necessary $PATH location (generally <code>/usr/local/bin</code>)</li> <li>Give approriate permissions the script<ul> <li>Make script executable using <code>sudo chmod +x &lt;file name&gt;</code> to allow for all to be able to execute it</li> <li>To restrict access you can do <code>sudo chmod 774 &lt;file name&gt;</code> to allow only the group and owner to be able to read, write, and execute, and only others to just read and execute.</li> </ul> </li> <li>Run</li> </ol>"},{"location":"#clone-repository","title":"Clone Repository","text":"<p>This option is for if you want to be able to contribute to the project from this device. Prequisite of having git SSH and user setup.</p> <ol> <li>Clone repository to file using <code>git clone &lt;url&gt;</code></li> <li>Compile current project state<ul> <li>NOTE that sometimes I have a test setup for file locations and then a release location commented out. This is a terrible practice I am aware, however it suits my needs with the time that I desire to spend on projects.</li> <li>Ensure the correct locations are given</li> </ul> </li> <li>Refer to Script Only procedures for directions on where to put the output file</li> </ol>"},{"location":"newproject/overview/","title":"Overview for newproject","text":""},{"location":"newproject/overview/#purpose","title":"Purpose","text":"<p>newproject - the fast way to setup necessary files and directories for C++ in VSCode</p>"},{"location":"newproject/overview/#description","title":"Description","text":"<p>This script is a way to easily create necessary directories for a C++ project with a <code>tasks.json</code> file for use in VSCode using the g++ compiler.</p> <p>Can be used in conjunction with newproject-git script to initialize git and create a remote GitHub repository for all project files.</p>"},{"location":"newproject/overview/#detailed-analysis","title":"Detailed Analysis","text":"<p>A guide can be found here to interact with the script. This section will not go over usage, just an analysis of what the script does.</p> <p>The script will create a new directory in a specified location with the following subdirectories:</p> <ul> <li>include</li> <li>bin</li> <li>lib</li> <li>docs</li> <li>src</li> <li>builds</li> <li>.vscode</li> </ul> <p>A <code>tasks.json</code> file will be created inside the <code>.vscode</code> directory. </p> <p>The <code>tasks.json</code> file will be a copy of the <code>tasks-linux.txt</code> file located inside the <code>newproject-files</code> directory (this will be referred to as the template directory). </p> <ul> <li>NOTE: that this directory is found in the script relative to the executable itself. If the script is located in the <code>/usr/local/bin/</code> directory, the path of the template directory should be <code>/usr/local/bin/newproject-files/</code>. See Setup for more information.</li> </ul> <p>After subdirectories and the tasks file have been created, the newly created project directory should be opened in Visual Studio Code.</p>"},{"location":"newproject/setup/","title":"Setup","text":""},{"location":"newproject/setup/#script-only","title":"Script Only","text":"<p>To use the script, the only requisites are that the <code>newproject</code> executable is in the same location as the <code>newproject-files</code> directory, as well as the <code>tasks-linux.txt</code> file inside the <code>newproject-files</code> directory is populated with whatever you want the default VS Code <code>tasks.json</code> file to be.</p>"},{"location":"newproject/setup/#setup-as-a-command","title":"Setup as a Command","text":"<p>To use the script as a normal linux command, follow these steps</p> <ol> <li>Move <code>newproject</code> script and <code>newproject-files</code> directory into <code>/bin</code></li> <li>Change script permissions to be executable. <ul> <li>Only allow the owner to read, write, and execute permissions by doing <code>chmod 755 newproject</code>. All others will only be able to read and execute.</li> </ul> </li> <li>Run the script</li> </ol>"},{"location":"newproject/usage/","title":"How to Use","text":""},{"location":"newproject/usage/#provide-a-project-name","title":"Provide a Project Name","text":"<p>Create a fresh project in the default directory by providing just a name for a new project. </p> <ul> <li>NOTE: Any spaces will be replaced with dashes </li> </ul> <p><code>newproject &lt;Project Name&gt;</code></p>"},{"location":"newproject/usage/#example","title":"Example","text":"<p><code>newproject \"Test Project Name\"</code></p> <p>The name for the project will be <code>Test-Project-Name</code></p>"},{"location":"newproject/usage/#specifying-a-project-directory","title":"Specifying a Project Directory","text":"<p>The default location to store projects is currently <code>/mnt/NAS/1. Project Related/Project Source Directories/</code>, and no argument is needed if you wish to store your project in that location. </p> <p>However, the default location can be overridden by providing a separate directory as the second argument by doing:</p> <p><code>newproject &lt;Project Name&gt; [directory path]</code></p>"},{"location":"newproject/usage/#example_1","title":"Example","text":"<p><code>newproject \"Test Project Name\" /usr/local/share/Projects</code></p> <p>This will store the project <code>Test-Project-Name</code> in the directory <code>/usr/local/share/Projects/</code></p>"},{"location":"newproject/usage/#confirm-project-creation","title":"Confirm Project Creation","text":"<p>Upon providing at least the name of the new project, some information will be shown to you.</p>"},{"location":"newproject/usage/#example_2","title":"Example","text":"<pre><code>$ newproject \"Test Project Name\" /usr/local/share/Projects\nDirectory is set to \"/usr/local/share/Projects\"\nConfirm name as \"Test-Project-Name\" [y/N]:\n</code></pre> <p>This will tell you the current specified directory to store the project, along with the amended project name.</p> <p>Submit your response. Entry is not case sensitive, and option other than 'Y' or 'y' will terminate the process. </p> <p>This is your last interaction with the script.</p>"},{"location":"newproject/usage/#further-information","title":"Further Information","text":"<p>After confirming the name of the project, some more actions will take place and information will be shown to you. If you wish to see exactly what will take, you can do so here.</p> <pre><code>Confirm name as \"Test-Project-Name\" [y/N]: y\nProject can be found at \"/usr/local/share/Projects/Test-Project-Name\"\nOpening in VS Code...\n</code></pre> <p>This will tell you the final path to the newly created directory, and that the script is attempting to open that location in Visual Studio Code.</p>"},{"location":"newproject-git/overview/","title":"Overview for newproject-git","text":""},{"location":"newproject-git/overview/#purpose","title":"Purpose","text":"<p>newproject-git - an easy way to intially setup Git and optionally connect to a remote GitHub repository</p>"},{"location":"newproject-git/overview/#description","title":"Description","text":"<p>This script is a quick way to initialize a Git repository for a project. It allows you to optionally</p> <ul> <li>Initialize a Git repository</li> <li>Create a default .gitignore file</li> <li>Connect a remote GitHub repository</li> <li>Commit and push everything to remote repository </li> </ul> <p>Can be used in an empty directory, or one created with newproject. This script will not create a new directory for you.</p>"},{"location":"newproject-git/overview/#detailed-analysis","title":"Detailed Analysis","text":"<p>A guide can be found here to interact with the script. This section will not go over usage, just an analysis of what the script does.</p> <p>This script will do all of following and provide a breakdown of the code being executed in the script</p> <ul> <li>Initialize a Git repository<ul> <li>This will do <code>git init -b main</code> in the desired directory</li> </ul> </li> <li> <p>Create a default .gitignore file</p> <ul> <li>Check if a <code>.gitignore</code> file exists, if it does not, it will create one</li> <li>If one is created, the <code>.gitignore</code> will be setup to ignore:<ul> <li><code>.vscode</code> directory</li> <li><code>bin</code> directory</li> </ul> </li> </ul> </li> <li> <p>Connect a remote GitHub repository</p> <ul> <li>This will call <code>git remote add origin &lt;url&gt;</code></li> </ul> </li> <li>Commit and push everything to remote repository<ul> <li>The commands being executed are as follows</li> </ul> </li> </ul> <pre><code>git add .\ngit commit -m \"Automated Commit\" -m \"Automated commit from newproject-git script\"\ngit push -u origin main\n</code></pre>"},{"location":"newproject-git/setup/","title":"Setup","text":""},{"location":"newproject-git/setup/#script-only","title":"Script Only","text":"<p>There are no prerequisites or dependencies to use this script. Just make it executable and it will work as intended.</p>"},{"location":"newproject-git/setup/#setup-as-a-command","title":"Setup as a Command","text":"<p>To use the script as a normal linux command, follow these steps</p> <ol> <li>Move <code>newproject-git</code> script directory into <code>/bin</code> or <code>/usr/local/share/bin</code></li> <li>Change script permissions to be executable. <ul> <li>Only allow the owner to read, write, and execute permissions by doing <code>chmod 755 newproject-git</code>. All others will only be able to read and execute.</li> </ul> </li> <li>Run the script</li> </ol>"},{"location":"newproject-git/usage/","title":"How to Use","text":""},{"location":"newproject-git/usage/#options","title":"Options","text":""},{"location":"newproject-git/usage/#-w-directory","title":"-w &lt;directory&gt;","text":"<p>Set the working directory. </p> <p>If this option is not present, the working directory is the current directory.</p>"},{"location":"newproject-git/usage/#example","title":"Example","text":"<pre><code>$ newproject-git -w /home/john/project/\n</code></pre> <p>NOTE: This will do nothing as no other options are included, however this is the correct syntax.</p>"},{"location":"newproject-git/usage/#-i","title":"-i","text":"<p>Initialize the Git repository with a <code>main</code> branch</p>"},{"location":"newproject-git/usage/#-g","title":"-g","text":"<p>Add a <code>.gitignore</code> file. The <code>.gitignore</code> will contain the following directories to be ignored</p> <ul> <li><code>.vscode</code></li> <li><code>bin</code></li> </ul>"},{"location":"newproject-git/usage/#-u-url","title":"-u &lt;url&gt;","text":"<p>Connect a remote repository to an existing local Git repository. You will be asked to confirm the URL before the attempt is made</p>"},{"location":"newproject-git/usage/#example_1","title":"Example","text":"<pre><code>$ newproject-git -u https://github.com/RyanB-code/Scripts.git \n</code></pre> <p>NOTE: Without an existing local Git repository, this command by itself will fail. </p>"},{"location":"newproject-git/usage/#-p","title":"-p","text":"<p>Stage, commit, and push everything in the working directory. If no remote repository is connected, this will fail, but the changes will still be committed locally.</p>"}]}